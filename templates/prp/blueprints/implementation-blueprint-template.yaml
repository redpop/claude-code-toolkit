# PRP Implementation Blueprint Template
# This template provides a structured format for implementation blueprints

blueprint:
  id: "${BLUEPRINT_ID}"
  project: "${PROJECT_NAME}"
  created: "${CREATION_TIMESTAMP}"
  based_on_analysis: "${ANALYSIS_ID}"

  overview:
    description: "${FEATURE_DESCRIPTION}"
    complexity: "${COMPLEXITY_LEVEL}"
    estimated_timeline: "${ESTIMATED_DURATION}"
    team_size: "${TEAM_SIZE_ESTIMATE}"

  architectural_decisions:
    - component: "${COMPONENT_NAME}"
      pattern: "${APPLIED_PATTERN}"
      rationale: "${DECISION_RATIONALE}"
      dependencies: ["${DEPENDENCY_1}", "${DEPENDENCY_2}"]
      integration_points: ["${INTEGRATION_POINT_1}"]

  implementation_phases:
    phase_1:
      name: "${PHASE_1_NAME}"
      duration: "${PHASE_1_DURATION}"
      dependencies: []
      deliverables:
        - "${DELIVERABLE_1}"
        - "${DELIVERABLE_2}"

    phase_2:
      name: "${PHASE_2_NAME}"
      duration: "${PHASE_2_DURATION}"
      dependencies: ["phase_1"]
      deliverables:
        - "${DELIVERABLE_3}"
        - "${DELIVERABLE_4}"

  detailed_tasks:
    - task_id: "${TASK_ID}"
      name: "${TASK_NAME}"
      phase: "${PHASE_NAME}"
      estimated_effort: "${EFFORT_HOURS}"
      complexity: "${TASK_COMPLEXITY}"
      dependencies: []

      technical_specifications:
        files_to_create:
          - path: "${FILE_PATH}"
            purpose: "${FILE_PURPOSE}"
            pattern: "${CODE_PATTERN}"

        files_to_modify:
          - path: "${EXISTING_FILE_PATH}"
            changes: ["${MODIFICATION_DESCRIPTION}"]

        dependencies:
          new: ["${NEW_DEPENDENCY_1}"]
          existing: ["${EXISTING_DEPENDENCY_1}"]

      acceptance_criteria:
        functional:
          - "${FUNCTIONAL_CRITERION_1}"
          - "${FUNCTIONAL_CRITERION_2}"

        non_functional:
          - "${PERFORMANCE_CRITERION}"
          - "${SECURITY_CRITERION}"

      testing_strategy:
        unit_tests:
          - "${UNIT_TEST_1}"
          - "${UNIT_TEST_2}"

        integration_tests:
          - "${INTEGRATION_TEST_1}"

        security_tests:
          - "${SECURITY_TEST_1}"

      quality_gates:
        - gate: "${QUALITY_GATE_NAME}"
          criteria: ["${GATE_CRITERION_1}", "${GATE_CRITERION_2}"]

  quality_management:
    testing_strategy:
      unit_testing:
        coverage_target: ${COVERAGE_TARGET}
        focus_areas: ["${FOCUS_AREA_1}", "${FOCUS_AREA_2}"]

      integration_testing:
        scenarios: ["${TEST_SCENARIO_1}", "${TEST_SCENARIO_2}"]

      security_testing:
        approaches: ["${SECURITY_APPROACH_1}"]
        compliance: ["${COMPLIANCE_STANDARD}"]

    performance_benchmarks:
      response_time: "${RESPONSE_TIME_TARGET}"
      throughput: "${THROUGHPUT_TARGET}"
      concurrent_users: "${CONCURRENCY_TARGET}"

  risk_management:
    identified_risks:
      - risk: "${RISK_DESCRIPTION}"
        probability: "${RISK_PROBABILITY}"
        impact: "${RISK_IMPACT}"
        mitigation: "${MITIGATION_STRATEGY}"

  success_metrics:
    technical:
      - metric: "${TECHNICAL_METRIC_1}"
      - metric: "${TECHNICAL_METRIC_2}"

    business:
      - metric: "${BUSINESS_METRIC_1}"
      - metric: "${BUSINESS_METRIC_2}"